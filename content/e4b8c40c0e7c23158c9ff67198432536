<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
	<title>ColorBox - customizable lightbox plugin for jQuery 1.3 &amp; 1.4</title>
	<meta http-equiv="X-UA-Compatible" content="IE=7" />
	<meta name="Description" content="ColorBox: light-weight, customizable lightbox plugin for jQuery 1.3 &amp; 1.4" />
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="verify-v1" content="ThDWVcRo3bPiftOqGPvn/jOi8zyIatI27dVbqsPDCOs=" />

	<link type="text/css" media="screen" rel="stylesheet" href="/screen.css" />
	<link type="text/css" media="screen" rel="stylesheet" href="/colorbox/core/example1/colorbox.css" />
	
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
	<script type="text/javascript" src="/colorpowered.js"></script>
	<script type="text/javascript" src="/colorbox/core/colorbox/jquery.colorbox-min.js"></script>
	<!--[if IE 6]><script src="/DD_belatedPNG_0.0.7a-min.js"></script><script>DD_belatedPNG.fix('#header ul a, #header_wrapper, #content_wrapper, p.design_nav a, p.numbernav a, p.photonav a, .branding_info');</script><style>#content, #web_portfolio, #branding_thumbs{_height:1%;}</style><![endif]-->

	
</head>
<body id="page_apps">
	<div id="header_wrapper">
		<div id="header">
			<p id="logo"><a href="/">Color Powered</a></p>
			<ul>
				<li id="nav_home" class="first"><a href="/">Home</a></li>
				<li id="nav_web"><a href="/web_design/">Web Design</a></li>
				<li id="nav_apps"><a href="/colorbox">Web Applications</a></li>
				<li id="nav_illustration"><a href="/branding_and_illustration/">Branding and Illustration</a></li>
				<li id="nav_approach"><a href="/our_approach/">Our Approach</a></li>
				<li id="nav_about"><a href="/about/">About</a></li>
				<li id="nav_contact"><a class="contact_link" href="mailto:info@colorpowered.com">Contact</a></li>
			</ul>
		</div>
	</div>
	<div id="content_wrapper">
		<div id="content">
					<div class="title"><h1>Web Applications</h1></div>
		
		<div id="tabnav">
			<ul>
			<li><a class="current">ColorBox: jQuery Lightbox</a></li>
			<li><a href="../blend/">Blend: jQuery Effect</a></li>
			<li><a href="../colorrating/">PHP 5 Star</a></li>
			</ul>
		</div>
		<div class="section"> 
			<div class="info"> 
				<h2 id="h_ColorBox">ColorBox</h2> 
				<p>A light-weight, customizable lightbox plugin for jQuery 1.3 and 1.4</p> 
				<div class="hr"></div> 
			</div> 
		</div> 
		<div class="section">
			<div class="info">

				<h2 id="h_whyColorBox">Why you should be using ColorBox</h2>
				<ul>
					<li>Supports photos, grouping, slideshow, ajax, inline, and iframed content.</li>
					<li>Lightweight: less than 9KB of JavaScript.</li>
					<li>Appearance is controlled through CSS so users can restyle the box.</li>
					<li>Behavior settings can be over-written without altering the ColorBox javascript file.</li>
					<li>Can be extended with callbacks &amp; event-hooks without altering the source files.</li>
					<li>Completely unobtrusive, options are set in the JS and require no changes to existing HTML.</li>
					<li>Preloads background images and can preload upcoming images in a photo group.</li>
					<li>Written in jQuery plugin format and can be chained with other jQuery commands. </li>
					<li>Generates W3C valid XHTML and adds no JS global variables &amp; passes JSLint.</li>
					<li>Released under the <a href="http://www.opensource.org/licenses/mit-license.php">MIT License</a>.</li>
				</ul>
				
				
				<p>Tested In: Firefox 3+, Safari 3+, Opera 9+, Chrome, Internet Explorer 6, 7, 8.</p>
			</div>
			<div class="callout">
				<div id='download' class="box">
					<h3 id="h_downloads">Downloads</h3>
					<p class="download_links"><a href="colorbox.zip">v1.3.15</a> | <a href="http://github.com/jackmoore/colorbox/tree/master">GitHub</a> | <a href="core/README">Version History</a></p>
				</div>
				<div class="box">
					<h3 id="h_demonstration">Demonstration</h3>
					<p class="examples">examples: </p><p class="numbernav"><a id="nav1" href="core/example1/index.html">1</a> <a id="nav2" href="core/example2/index.html">2</a> <a id="nav3" href="core/example3/index.html">3</a> <a id="nav4" href="core/example4/index.html">4</a><a id="nav5" href="core/example5/index.html">5</a></p>
				</div>
			</div>
		</div>

		<div class="section">

			<div class="callout">
				<div class="statement">
					<h3 id="h_goalsColorBox">Goals of ColorBox</h3>
					<p class="goal1">Allow users to create a customized lightbox that is unique to their project.</p>
					<p class="goal2">Promote accessibility, W3C standards, and best practices.</p>
				</div>
			</div>

			<div class="info">
				<h2 id="h_instructions">Instructions</h2>
				<p>The colorbox method takes a key/value object and an optional callback. <br/>
				Format: <span class="code">$('selector').colorbox({key:value, key:value, key:value}, callback);</span><br/>
				Example: <span class="code">$('a#login').colorbox({transition:'fade', speed:500});</span><br/>
				Example: <span class="code">$('a.gallery').colorbox();</span><br/>
				Example: <span class="code">$('button').colorbox({href:"thankyou.html"});</span></p>
				<p>And it can be called directly, without assignment to an element<br/>
				Example: <span class="code">$.colorbox({href:"thankyou.html"});</span></p>
				<p>ColorBox can accept a function in place of a static value:<br/>
				<span class='code'>$("a[rel='example']").colorbox({title: function(){<br/>
				&nbsp; &nbsp; var url = $(this).attr('href');<br/>
				&nbsp; &nbsp; return '&lt;a href="'+url+'" target="_blank"&gt;Open In New Window&lt;/a&gt;';<br/>
				}});</span></p>
				
				<p>Follow the source code on the demonstration pages for plenty of examples.</p>
				<table>
				<tr>
					<th id="key">Key</th><th id="default">Default</th><th id="description">Description</th>
				</tr>
				<tr>
					<td>transition</td><td>"elastic"</td><td>The transition type. Can be set to "elastic", "fade", or "none".</td>
				</tr>
				<tr>
					<td>speed</td><td>350</td><td>Sets the speed of the fade and elastic transitions, in milliseconds.</td>
				</tr>
				<tr>
					<td>href</td><td>false</td><td>This can be used as an alternative anchor URL or to associate a URL for non-anchor elements such as images or form buttons. Example:<br /><span class="code">$('h1').colorbox({href:"welcome.html"})</span></td>
				</tr>
				<tr>
					<td>title</td><td>false</td><td>This can be used as an anchor title alternative for ColorBox.</td>
				</tr>
				<tr>
					<td>rel</td><td>false</td><td>This can be used as an anchor rel alternative for ColorBox.  This allows the user to group any combination of elements together for a gallery, or to override an existing rel so elements are not grouped together.  Example:<br /><span class="code">$('#example a').colorbox({rel:'group1'})</span>
					<br/>Note: The value can also be set to 'nofollow' to disable grouping.</td>
				</tr> 
				<tr>
					<td>width</td><td>false</td><td>Set a fixed total width. This includes borders and buttons. Example: "100%", "500px", or 500</td>
				</tr>
				<tr>
					<td>height</td><td>false</td><td>Set a fixed total height. This includes borders and buttons. Example: "100%", "500px", or 500</td>
				</tr>
				<tr>
					<td>innerWidth</td><td>false</td><td>This is an alternative to 'width' used to set a fixed inner width. This excludes borders and buttons. Example: "50%", "500px", or 500</td>
				</tr>
				<tr>
					<td>innerHeight</td><td>false</td><td>This is an alternative to 'height' used to set a fixed inner height. This excludes borders and buttons. Example: "50%", "500px", or 500</td>
				</tr>
				<tr>
					<td>initialWidth</td><td>300</td><td>Set the initial width, prior to any content being loaded.</td>
				</tr>
				<tr>
					<td>initialHeight</td><td>100</td><td>Set the initial height, prior to any content being loaded.</td>
				</tr>
				<tr>
					<td>maxWidth</td><td>false</td><td>Set a maximum width for loaded content. Example: "100%", 500, "500px"</td>
				</tr>
				<tr>
					<td>maxHeight</td><td>false</td><td>Set a maximum height for loaded content. Example: "100%", 500, "500px"</td>
				</tr>
				<tr>
					<td>scalePhotos</td><td>true</td><td>If 'true' and if maxWidth, maxHeight, innerWidth, innerHeight, width, or height have been defined, ColorBox will scale photos to fit within the those values.</td>
				</tr>
				<tr>
					<td>scrolling</td><td>true</td><td>If 'false' ColorBox will hide scrollbars for overflowing content.  This could be used on conjunction with the resize method (see below) for a smoother transition if you are appending content to an already open instance of ColorBox.</td>
				</tr>
				<tr>
					<td>iframe</td><td>false</td><td>If 'true' specifies that content should be displayed in an iFrame.</td>
				</tr>
				<tr>
					<td>inline</td><td>false</td><td>If 'true' a jQuery selector can be used to display content from the current page. Example: <br /><span class='code'>$("#inline").colorbox({inline:true, href:"#myForm"});</span></td>
				</tr>
				<tr>
					<td>html</td><td>false</td><td>This allows an HTML string to be used directly instead of pulling content from another source (ajax, inline, or iframe). Example: <br /><span class='code'>$.colorbox({html:'&lt;p&gt;Hello&lt;/p&gt;'});</span></td>
				</tr>
				<tr>
					<td>photo</td><td>false</td><td>If true, this setting forces ColorBox to display a link as a photo.  Use this when automatic photo detection
  fails (such as using a url like 'photo.php' instead of 'photo.jpg', 'photo.jpg#1', or 'photo.jpg?pic=1')</td>
				</tr>
				<tr>
					<td>opacity</td><td>0.85</td><td>The overlay opacity level. Range: 0 to 1.</td>
				</tr>
				<tr>
					<td>open</td><td>false</td><td>If true, the lightbox will automatically open with no input from the visitor.</td>
				</tr>
				<tr>
					<td>returnFocus</td><td>true</td><td>If true, focus will be returned when ColorBox exits to the element it was launched from.</td>
				</tr>
				<tr>
					<td>preloading</td><td>true</td><td>Allows for preloading of 'Next' and 'Previous' content in a shared relation group (same values for the 'rel' attribute), after the current content has finished loading.  Set to 'false' to disable.</td>
				</tr>
				<tr>
					<td>overlayClose</td><td>true</td><td>If false, disables closing ColorBox by clicking on the background overlay.</td>
				</tr>
				<tr>
					<td>escKey</td><td>true</td><td>If false, will disable closing colorbox on esc key press.</td>
				</tr>
				<tr>
					<td>arrowKey</td><td>true</td><td>If false, will disable the left and right arrow keys from navigating between the items in a group.</td>
				</tr>
				<tr>
					<td>loop</td><td>true</td><td>If false, will disable the ability to loop back to the beginning of the group when on the last element.</td>
				</tr>
				<tr>
					<td>slideshow</td><td>false</td><td>If true, adds an automatic slideshow to a content group / gallery.</td>
				</tr>
				<tr>
					<td>slideshowSpeed</td><td>2500</td><td>Sets the speed of the slideshow, in milliseconds.</td>
				</tr>
				<tr>
					<td>slideshowAuto</td><td>true</td><td>If true, the slideshow will automatically start to play.</td>
				</tr>
				<tr>
					<td>slideshowStart</td><td>"start slideshow"</td><td>Text for the slideshow start button.</td>
				</tr>
				<tr>
					<td>slideshowStop</td><td>"stop slideshow"</td><td>Text for the slideshow stop button</td>
				</tr>
				<tr>
					<td>current</td><td>"image {current} of {total}"</td><td>Text format for the content group / gallery count.  {current} and {total} are detected and replaced with actual numbers while ColorBox runs.</td>
				</tr>
				<tr>
					<td>previous</td><td>"previous"</td><td>Text for the previous button in a shared relation group (same values for 'rel' attribute).</td>
				</tr>
				<tr>
					<td>next</td><td>"next"</td><td>Text for the next button in a shared relation group (same values for 'rel' attribute).</td>
				</tr>
				<tr>
					<td>close</td><td>"close"</td><td>Text for the close button.  The 'Esc' key will also close ColorBox.</td>
				</tr>
				<tr>
					<td>onOpen</td><td>false</td><td>Callback that fires right before ColorBox begins to open.</td>
				</tr>
				<tr>
					<td>onLoad</td><td>false</td><td>Callback that fires right before attempting to load the target content.</td>
				</tr>
				<tr>
					<td>onComplete</td><td>false</td><td>Callback that fires right after loaded content is displayed.</td>
				</tr>
				<tr>
					<td>onCleanup</td><td>false</td><td>Callback that fires at the start of the close process.</td>
				</tr>
				<tr>
					<td>onClosed</td><td>false</td><td>Callback that fires once ColorBox is closed.</td>
				</tr>
				</table>
			</div>
		</div>


<div class="section">
	<div class="info">
		<h2 id="h_extending">Extending</h2>
		<p>Public methods and event hooks are provided for developers who want to extend or modify the plugin's functionality without having to rewrite the source files.
		</p>
		<p>
			Example of using an event listener and public method to build a primitive slideshow:<br />
			<span class='code'>$(document).bind('cbox_complete', function(){<br />
			 &nbsp; &nbsp; &nbsp; &nbsp; setTimeout($.colorbox.next, 1500);<br />
			});</span>
		</p>
		<h4>Public Methods</h4>
		<p><span class='code'>$.colorbox()</span><br />
		This method allows you to call ColorBox without having to assign it to an element.  <br/>Example: $.colorbox({href:'login.php'});
		</p>
		<p><span class='code'>$.colorbox.next()</span> and <span class='code'>$.colorbox.prev()</span><br />
		These methods moves to the next and previous items in a group and are the same as pressing the 'next' or 'previous' buttons.
		</p>
		<p><span class='code'>$.colorbox.close()</span><br />
		This method initiates the close sequence, which does not immediately complete.  The lightbox will be completely closed only when the '<span class='code'>cbox_closed</span>' event is fired.
		</p>
		<p><span class='code'>$.colorbox.element()</span><br />
		This method is used to fetch the current HTML element that ColorBox is associated with.  Returns a jQuery object containing the element. <br/>Example: var $element = $.colorbox.element();
		</p>
		
		<p><span class='code'>$.colorbox.resize({settings_object})</span><br />
		This allows ColorBox to be resized based on it's own auto-calculations, or to a specific size.
		This must be called manually after ColorBox's content has loaded.
		The optional parameters object can accept 'width' or 'innerWidth' and 'height' or 'innerHeight'.
		Without specifying a width or height, ColorBox will attempt to recalculate the height of it's current content.
		</p>
		
		<p><span class='code'>$.colorbox.init()</span><br />
		This runs silently when the DOM is first loaded and is used to initialize the lightbox (adds necessary HTML to the DOM, preloads the interface graphics, initializes variables, etc).  If ColorBox were completely removed from the DOM, to load in a new stylesheet for example, this would be needed to re-initialize it.
		</p>
		
		<p><span class='code'>$.colorbox.remove()</span><br />
		Removes all traces of ColorBox from the document.  Not the same as $.colorbox.close(), which tucks colorbox away for future use.
		</p>
		
		<h4>Event Hooks</h4>
		<p>ColorBox triggers four different events during it's use.  The event hooks fire at the same time as their corresponding callbacks (ie. cbox_complete &amp; onComplete), but can be used to make a universal change to ColorBox, while callbacks are more for targeting changes on a specific instance of the modal.</p>
		
		<p>'<span class='code'>cbox_open</span>' triggers when ColorBox is first opened, but after a few key variable assignments take place.</p>
		<p>'<span class='code'>cbox_load</span>' triggers at the start of the phase where content type is determined and loaded.</p>
		<p>'<span class='code'>cbox_complete</span>' triggers when the transition has completed and the newly loaded content has been revealed.</p>
		<p>'<span class='code'>cbox_cleanup</span>' triggers as the close method begins.</p>
		<p>'<span class='code'>cbox_closed</span>' triggers as the close method ends.</p>
	</div>
</div>

<div class="section">
	<div class="info">
		<h2 id="h_author">Author</h2>
		<a href="http://twitter.com/jacklmoore" style="float:left; margin-right:15px;" ><img src="/images/photo_jack_small.jpg" alt="Follow me on twitter"/></a>
		<p>Hi, I'm Jack and I'm the designer/developer for this project and this website.  You can <a href="http://twitter.com/jacklmoore">follow me on twitter</a> if you are interested in updates to this or my other work.  
		</p>
		<p>I created ColorBox because I needed a lightbox that could easily be customized to compliment the style of the website it was being integrated with.
		</p>
		<!--<p>If you are interested in contracting Color Powered to assist with a project, jQuery or otherwise, contact <a href="mailto:alex@colorpowered.com">Alex</a> or <a href="mailto:jack@colorpowered.com">myself</a>.  -->
		</p>
	</div>
</div>
		<div class="section">
			<div class="info">
				<h2 id="h_help"><a name='help'>Help</a></h2>
<p>Visit the <a href="http://groups.google.com/group/colorbox/topics">ColorBox Google Group</a> if you have any questions or problems.  <em>Always post a link demonstration your problem!</em>  See below for solutions to common problems.</p>

<h4><a name='help_flash'>Flash appears over ColorBox:</a></h4>
<p>This is not a ColorBox specific problem, by default Flash will overlay any HTML content.  This can be prevented by setting the 'wmode' param and embed attribute to 'transparent'.</p>
<p>For more information from <a href='http://kb2.adobe.com/cps/155/tn_15523.html'>Adobe Support</a></p>

<h4><a name='help_doctype'>ColorBox is positioned incorrectly or behaving strangely in Internet Explorer:</a></h4>
<p>This is likely a doctype issue.  ColorBox requires a valid doctype and rendering in quirks mode is not supported.  Make sure you are using the full doctype declaration to insure rendering in standards mode.</p>
<p>This abbreviated doctype renders the document in quirks mode for Internet Explorer:<br/>
<span class='code'>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></p>
<p>The doctype with URI renders in standards mode for all browsers:<br/>
<span class='code'>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></p>
<p>For more information, see A List Apart's <a href='http://www.alistapart.com/articles/doctype/'>primer on doctypes</a>.</p>

<h4>ColorBox is positioned incorrectly or behaving strangely:</h4>
<p>This could be a source order problem.  Both jQuery and colorbox.css need to be loaded prior to jquery.colorbox.js.  ColorBox should be called or assigned to elements inside of jQuery's ready method, which should be declared after jquery.colorbox.js.</p>

<h4><a name='help_iframe'>ColorBox broken or displaying incorrectly when loading documents:</a></h4>
<p>Often this is due to not using an iframe when an iframe would be required.  The default method, ajax, is only for elements that can exist within a &lt;body&gt; element.  </p>
<p>If you are loading a complete HTML document with &lt;html&gt;, &lt;head&gt;, and &lt;body&gt; elements, then using an iframe is required.  While nesting these elements may appear to display correctly in some browsers, it is still invalid HTML and should not be depended on.   Remember to set the width and height values for ColorBox when using an iframe, it has no way of knowing the dimensions of elements that exist within the iframe.</p>
<p>ColorBox leverages jQuery's <a href='http://docs.jquery.com/Ajax/load'>load method</a> for handling ajax. If you are loading a document from the same domain as your current document, you can use a selector pull out just the portion of the document that is needed.
Example:<br/>
<span class='code'>$('#example').colorbox({href:"document.html div#content"});</span></p>

<h4><a name='help_paths'>ColorBox's borders do not display in Internet Explorer:</a></h4>
<p>Some of the example styles provided make use of transparent .PNG files.  Alpha transparencies aren't supported by default in IE6, and can cause an undesirable 'black halo' effect in IE7 and IE8 when changing their opacity.  ColorBox resolves this by using one of IE's CSS filters.  You can see these at the bottom of colorbox.css.  The filter src paths are relative to the HTML document (just like an IMG element), while CSS background image paths are relative to the CSS document.  In the examples I provide the relative path is the same, but users often change the directory structure once they move the files over to their own host.  The filter src path needs to reflect this change with the appropriate relative path or an absolute path.  Here is an example that assumes the 'images' folder is in the root directory:</p>
<p>Original CSS with incorrect relative path:<br/><span class='code'>.AlphaImageLoader(src=images/internet_explorer/borderTopLeft.png</span></p>
<p>Corrected relative path:<br/><span class='code'>.AlphaImageLoader(src=/images/internet_explorer/borderTopLeft.png</span></p>
<p>Corrected absolute path:<br/><span class='code'>.AlphaImageLoader(src=http://your_domain.com/images/internet_explorer/borderTopLeft.png</span></p>

<h4><a name='help_ajax'>Trying to load an external page results in "Request unsuccessful"</a></h4>
<p>This could be due to an invalid URL or trying to load ajax content from a different domain.  Ajax will only work with documents that are on the same domain as your current document due to browser restrictions.  Ajax has to be run from a server to function (e.g., ajax content is not going to work from your desktop unless you are running a web server such as Apache for local development).</p>

<h4><a name='help_nofollow'>How to disable grouping by rel attribute</a></h4>
<p>Set ColorBox's value for rel to 'nofollow'.  Example:<br/>
<span class='code'>$('a[rel="examples"]').colorbox({rel:'nofollow'});</span></p>

<h4><a name='help_jquery'>JS Error: "$(selector).colorbox is not a function"</a></h4>
<p>This most often happens when users load multiple versions of jQuery which overwrites the version that was extended with the ColorBox plugin.  Check out source to see if a version of jQuery is being loaded after ColorBox has been loaded.</p>
<p>If your HTML document only contains one link to the jQuery library, the same error could also be caused by loading HTML snippets (through ajax) or HTML documents that load the jQuery library.  If you are loading HTML snippets with ajax or through ColorBox, be sure that they do not contain a link to the jQuery library. HTML documents should be contained within iframes or opened with ColorBox's iframe property.</p>

<h4><a name='help_focus'>Closing ColorBox breaks accordians/tabs/animations</a></h4>
<p>Try setting 'returnFocus' to false.  ColorBox returns focus to the element it was launched from upon closing.  This is intended to provide better accessibility to users who use their keyboard to navigate through the document's links, but it can cause problems with some JS effects.  The problem isn't ColorBox specific and can be reproduced without ColorBox by pressing the TAB key to cycle through the available links.</p>

<h4><a name='help_timing'>JavaScript/jQuery is not working inside of ColorBox.</a></h4>
<p>This is often due to trying to access an element before it has been loaded into the document and can be resolved by moving the JavaScript into ColorBox's onComplete callback.</p>

<p>Example (using <a href="http://jquery.malsup.com/form/">jQuery Forms</a> plugin):<br/>
<span class='code'>
$('#login_window').colorbox({onComplete:function(){<br/>
&nbsp; &nbsp; $('form#login').ajaxForm();<br/>
}});<br/>
</span>
</p>

<h4><a name='help_parent'>Opening ColorBox in the parent of an iframed document</a></h4>
<p>Anything loaded within an iframe is going to be confined to that iframe. The only way not to be confined by the iframe is to move ColorBox to the parent document.  From the iframe you can reach back to the parent document to call ColorBox.</p>

<p>Example:<br/>
<span class='code'>&lt;a href='login.php' onclick='parent.$.colorbox({href:"login.php"}); return false;'&gt;Open from parent&lt;/a&gt;</span>
</p>

<p>Note that grouping will not work with this format since the parent document can not access the content of the iframe to see if any of those elements share a rel attribute value.</p>

			</div>
		</div>
			</div>
		<div id="footer">
			<p>email: <a href="mailto:info@colorpowered.com">info@colorpowered.com</a> &copy; 2009 Color Powered</p>
		</div>
		<script type="text/javascript">
		var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
		document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
		</script>
		<script type="text/javascript">
		try {
		var pageTracker = _gat._getTracker("UA-7069470-1");
		pageTracker._trackPageview();
		} catch(err) {}</script>

		<script type="text/javascript">
		<!--
		$.preloadImages = function(){for(var i = 0; i<arguments.length; i++){$("<img>").attr("src", arguments[i]);}}
		$.preloadImages("/images/bg_contact.png", "/images/bg_hr.png", "/images/submit.png");
		-->
		</script>
	</div>
	</body>
</html>
